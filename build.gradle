buildscript {
    ext {
        springBootVersion = '1.3.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}
plugins {
	id 'org.ajoberstar.grgit' version '1.5.1'
}


apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'docker'
apply plugin: 'org.ajoberstar.grgit'

group = 'hms'

jar {
    baseName = 'rc-user'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-amqp')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR3"
    }
}

task buildDocker(type: Docker, dependsOn: build) {
    def dockerDir = "docker"
    def git = org.ajoberstar.grgit.Grgit.open(file('.'))
    tagVersion = git.branch.getCurrent().getName()
    push = true
    project.group = "docker-registry.intr/"+project.group
    applicationName = jar.baseName
    dockerfile = file("${buildDir}/Dockerfile")
    doFirst {
        copy {
            from "${dockerDir}/Dockerfile"
            into buildDir
            expand(jarBuildName: jar.getArchiveName(), projectName: project.name)
        }
        copy {
            from jar
            into stageDir
        }
    }
}
